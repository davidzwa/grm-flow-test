---

name: Release
on:
  push:
    branches:
      - 'release/*'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Project Repository
      uses: actions/checkout@v3.5.2
      with:
        path: repository
        submodules: true
        fetch-depth: 0

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.10.2
      with:
        versionSpec: '5.x'

    # Will trigger the release branch tag detection
    - name: Use GitVersion
      uses: gittools/actions/gitversion/execute@v0.10.2
      id: gitversion
      with:
        targetPath: repository

    # Split the release/x.y.z tagging it as repo.outputs_0
    - name: Extract owner and repo
      uses: jungwinter/split@v2.1.0
      id: repo
      with:
       separator: '/'
       msg: ${{ github.repository }}

    - name: Install GitReleaseManager
      uses: gittools/actions/gitreleasemanager/setup@v0.10.2
      with:
       versionSpec: '0.13.x'

    - name: Create release with GitReleaseManager
      uses: gittools/actions/gitreleasemanager/create@v0.10.2
      with:
       token: ${{ secrets.GITHUB_TOKEN }}
       owner: ${{ steps.repo.outputs._0 }}
       repository: ${{ steps.repo.outputs._1 }}
       milestone: ${{ steps.gitversion.outputs.majorMinorPatch }}
       name: 'Release ${{ steps.gitversion.outputs.majorMinorPatch }}'

    - name: Publish release and tag with GitReleaseManager
      uses: gittools/actions/gitreleasemanager/publish@v0.10.2
      with:
       token: ${{ secrets.GITHUB_TOKEN }}
       owner: ${{ steps.repo.outputs._0 }}
       repository: ${{ steps.repo.outputs._1 }}
       tagName: ${{ steps.gitversion.outputs.majorMinorPatch }}

    - name: Close milestone with GitReleaseManager
      uses: gittools/actions/gitreleasemanager/close@v0.10.2
      with:
       token: ${{ secrets.GITHUB_TOKEN }}
       owner: ${{ steps.repo.outputs._0 }}
       repository: ${{ steps.repo.outputs._1 }}
       milestone: ${{ steps.gitversion.outputs.majorMinorPatch }}
